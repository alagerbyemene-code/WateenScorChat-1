/*
  # ุฅูุดุงุก ูุงุนุฏุฉ ุจูุงูุงุช ุดุงุช ูุชูู ุงูุนูุฑุจ ุงููุงููุฉ
  
  1. ุฌุฏุงูู ุฌุฏูุฏุฉ:
    - users (ุงููุณุชุฎุฏููู): ูุนูููุงุช ุงููุณุชุฎุฏููู ุงููุงููุฉ
    - rooms (ุงูุบุฑู): ุบุฑู ุงูุฏุฑุฏุดุฉ
    - messages (ุงูุฑุณุงุฆู): ุฑุณุงุฆู ุงูุฏุฑุฏุดุฉ ุงูุนุงูุฉ
    - private_messages (ุงูุฑุณุงุฆู ุงูุฎุงุตุฉ): ุงูุฑุณุงุฆู ุงูุฎุงุตุฉ ุจูู ุงููุณุชุฎุฏููู
    - news (ุงูุฃุฎุจุงุฑ): ููุดูุฑุงุช ุงูุฃุฎุจุงุฑ
    - stories (ุงููุตุต): ุงููุตุต ุงูููููุฉ
    - bans (ุงูุญุธุฑ): ุณุฌู ุงูุญุธุฑ
    - mutes (ุงููุชู): ุณุฌู ุงููุชู
    - coins_transactions (ูุนุงููุงุช ุงูููุงุท): ุณุฌู ููุงุท ุงููุณุชุฎุฏููู
    - shop_items (ุนูุงุตุฑ ุงููุชุฌุฑ): ุงูุฅุทุงุฑุงุช ูุงูุฒุฎุงุฑู
    - user_items (ุนูุงุตุฑ ุงููุณุชุฎุฏู): ุงูุนูุงุตุฑ ุงููููููุฉ
    
  2. ุงูุฃูุงู:
    - ุชูุนูู RLS ุนูู ูู ุงูุฌุฏุงูู
    - ุณูุงุณุงุช ููุชุญูู ุจุงููุตูู
*/

-- ุฌุฏูู ุงููุณุชุฎุฏููู
CREATE TABLE IF NOT EXISTS users (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  email text UNIQUE NOT NULL,
  password text NOT NULL,
  display_name text NOT NULL,
  rank text DEFAULT 'visitor',
  role text DEFAULT 'user',
  coins integer DEFAULT 2000,
  profile_image1 text,
  profile_image2 text,
  cover_image text,
  message_background text,
  age integer,
  gender text,
  marital_status text,
  about_me text,
  name_color text DEFAULT '#ffffff',
  font_color text DEFAULT '#000000',
  name_decoration text,
  profile_music text,
  last_seen timestamptz DEFAULT now(),
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุงูุบุฑู
CREATE TABLE IF NOT EXISTS rooms (
  id serial PRIMARY KEY,
  name text NOT NULL,
  description text,
  background text,
  created_by uuid REFERENCES users(id),
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุงูุฑุณุงุฆู ุงูุนุงูุฉ
CREATE TABLE IF NOT EXISTS messages (
  id serial PRIMARY KEY,
  room_id integer REFERENCES rooms(id) ON DELETE CASCADE,
  user_id uuid REFERENCES users(id),
  content text,
  type text DEFAULT 'text',
  image_url text,
  voice_url text,
  quoted_message_id integer,
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุงูุฑุณุงุฆู ุงูุฎุงุตุฉ
CREATE TABLE IF NOT EXISTS private_messages (
  id serial PRIMARY KEY,
  sender_id uuid REFERENCES users(id),
  receiver_id uuid REFERENCES users(id),
  content text,
  type text DEFAULT 'text',
  image_url text,
  voice_url text,
  is_read boolean DEFAULT false,
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุงูุฃุฎุจุงุฑ
CREATE TABLE IF NOT EXISTS news (
  id serial PRIMARY KEY,
  user_id uuid REFERENCES users(id),
  content text,
  media text,
  likes jsonb DEFAULT '[]',
  reactions jsonb DEFAULT '{}',
  pinned boolean DEFAULT false,
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุงูุชุนูููุงุช
CREATE TABLE IF NOT EXISTS comments (
  id serial PRIMARY KEY,
  post_id integer REFERENCES news(id) ON DELETE CASCADE,
  user_id uuid REFERENCES users(id),
  content text NOT NULL,
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุงููุตุต
CREATE TABLE IF NOT EXISTS stories (
  id serial PRIMARY KEY,
  user_id uuid REFERENCES users(id),
  image text NOT NULL,
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุงูุญุธุฑ
CREATE TABLE IF NOT EXISTS bans (
  id serial PRIMARY KEY,
  user_id uuid REFERENCES users(id),
  banned_by uuid REFERENCES users(id),
  reason text,
  duration text,
  expires_at timestamptz,
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุงููุชู
CREATE TABLE IF NOT EXISTS mutes (
  id serial PRIMARY KEY,
  user_id uuid REFERENCES users(id),
  muted_by uuid REFERENCES users(id),
  reason text,
  duration text,
  expires_at timestamptz,
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ูุนุงููุงุช ุงูููุงุท
CREATE TABLE IF NOT EXISTS coins_transactions (
  id serial PRIMARY KEY,
  user_id uuid REFERENCES users(id),
  amount integer NOT NULL,
  type text NOT NULL,
  description text,
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุนูุงุตุฑ ุงููุชุฌุฑ
CREATE TABLE IF NOT EXISTS shop_items (
  id serial PRIMARY KEY,
  name text NOT NULL,
  type text NOT NULL,
  price integer NOT NULL,
  image text,
  description text,
  required_rank text,
  created_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุนูุงุตุฑ ุงููุณุชุฎุฏู
CREATE TABLE IF NOT EXISTS user_items (
  id serial PRIMARY KEY,
  user_id uuid REFERENCES users(id),
  item_id integer REFERENCES shop_items(id),
  is_active boolean DEFAULT false,
  purchased_at timestamptz DEFAULT now()
);

-- ุฌุฏูู ุงูุฅุดุนุงุฑุงุช
CREATE TABLE IF NOT EXISTS notifications (
  id serial PRIMARY KEY,
  user_id uuid REFERENCES users(id),
  type text NOT NULL,
  content text NOT NULL,
  is_read boolean DEFAULT false,
  created_at timestamptz DEFAULT now()
);

-- ุฅุฏุฑุงุฌ ุบุฑูุฉ ุงูุชุฑุงุถูุฉ
INSERT INTO rooms (id, name, description) 
VALUES (1, 'ุงูุบุฑูุฉ ุงูุฑุฆูุณูุฉ', 'ุบุฑูุฉ ุฏุฑุฏุดุฉ ุนุงูุฉ')
ON CONFLICT DO NOTHING;

-- ุฅุฏุฑุงุฌ ุญุณุงุจ ุงููุงูู
INSERT INTO users (email, password, display_name, rank, role, coins) 
VALUES ('njdj9985@gmail.com', 'Zxcvbnm.8', 'ูุงูู ุงููููุน ๐', 'chat_star', 'owner', 999999999)
ON CONFLICT (email) DO NOTHING;

-- ุชูุนูู RLS
ALTER TABLE users ENABLE ROW LEVEL SECURITY;
ALTER TABLE rooms ENABLE ROW LEVEL SECURITY;
ALTER TABLE messages ENABLE ROW LEVEL SECURITY;
ALTER TABLE private_messages ENABLE ROW LEVEL SECURITY;
ALTER TABLE news ENABLE ROW LEVEL SECURITY;
ALTER TABLE comments ENABLE ROW LEVEL SECURITY;
ALTER TABLE stories ENABLE ROW LEVEL SECURITY;
ALTER TABLE bans ENABLE ROW LEVEL SECURITY;
ALTER TABLE mutes ENABLE ROW LEVEL SECURITY;
ALTER TABLE coins_transactions ENABLE ROW LEVEL SECURITY;
ALTER TABLE shop_items ENABLE ROW LEVEL SECURITY;
ALTER TABLE user_items ENABLE ROW LEVEL SECURITY;
ALTER TABLE notifications ENABLE ROW LEVEL SECURITY;

-- ุณูุงุณุงุช ุงููุณุชุฎุฏููู
CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ูุฑุงุกุฉ ูู ุงููููุงุช"
  ON users FOR SELECT
  TO authenticated, anon
  USING (true);

CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุชุญุฏูุซ ูููุงุชูู ุงูุฎุงุตุฉ"
  ON users FOR UPDATE
  TO authenticated
  USING (id = auth.uid())
  WITH CHECK (id = auth.uid());

-- ุณูุงุณุงุช ุงูุบุฑู
CREATE POLICY "ุงูุฌููุน ูููููู ูุฑุงุกุฉ ุงูุบุฑู"
  ON rooms FOR SELECT
  TO authenticated, anon
  USING (true);

CREATE POLICY "ุงููุณุคูููู ููุท ูููููู ุฅูุดุงุก ุบุฑู"
  ON rooms FOR INSERT
  TO authenticated
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM users 
      WHERE id = auth.uid() 
      AND role IN ('owner', 'admin')
    )
  );

-- ุณูุงุณุงุช ุงูุฑุณุงุฆู
CREATE POLICY "ุงูุฌููุน ูููููู ูุฑุงุกุฉ ุงูุฑุณุงุฆู"
  ON messages FOR SELECT
  TO authenticated, anon
  USING (true);

CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุฅุฑุณุงู ุฑุณุงุฆู"
  ON messages FOR INSERT
  TO authenticated
  WITH CHECK (user_id = auth.uid());

-- ุณูุงุณุงุช ุงูุฑุณุงุฆู ุงูุฎุงุตุฉ
CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ูุฑุงุกุฉ ุฑุณุงุฆููู ุงูุฎุงุตุฉ"
  ON private_messages FOR SELECT
  TO authenticated
  USING (sender_id = auth.uid() OR receiver_id = auth.uid());

CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุฅุฑุณุงู ุฑุณุงุฆู ุฎุงุตุฉ"
  ON private_messages FOR INSERT
  TO authenticated
  WITH CHECK (sender_id = auth.uid());

-- ุณูุงุณุงุช ุงูุฃุฎุจุงุฑ
CREATE POLICY "ุงูุฌููุน ูููููู ูุฑุงุกุฉ ุงูุฃุฎุจุงุฑ"
  ON news FOR SELECT
  TO authenticated, anon
  USING (true);

CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ูุดุฑ ุฃุฎุจุงุฑ"
  ON news FOR INSERT
  TO authenticated
  WITH CHECK (user_id = auth.uid());

CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุชุญุฏูุซ ุฃุฎุจุงุฑูู"
  ON news FOR UPDATE
  TO authenticated
  USING (user_id = auth.uid())
  WITH CHECK (user_id = auth.uid());

-- ุณูุงุณุงุช ุงูุชุนูููุงุช
CREATE POLICY "ุงูุฌููุน ูููููู ูุฑุงุกุฉ ุงูุชุนูููุงุช"
  ON comments FOR SELECT
  TO authenticated, anon
  USING (true);

CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุฅุถุงูุฉ ุชุนูููุงุช"
  ON comments FOR INSERT
  TO authenticated
  WITH CHECK (user_id = auth.uid());

-- ุณูุงุณุงุช ุงููุตุต
CREATE POLICY "ุงูุฌููุน ูููููู ูุฑุงุกุฉ ุงููุตุต"
  ON stories FOR SELECT
  TO authenticated, anon
  USING (true);

CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ูุดุฑ ูุตุต"
  ON stories FOR INSERT
  TO authenticated
  WITH CHECK (user_id = auth.uid());

-- ุณูุงุณุงุช ุงูุญุธุฑ ูุงููุชู
CREATE POLICY "ุงููุณุคูููู ููุท ูููููู ุฑุคูุฉ ุงูุญุธุฑ"
  ON bans FOR SELECT
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM users 
      WHERE id = auth.uid() 
      AND role IN ('owner', 'admin', 'moderator')
    )
  );

CREATE POLICY "ุงููุณุคูููู ููุท ูููููู ุญุธุฑ ุงููุณุชุฎุฏููู"
  ON bans FOR INSERT
  TO authenticated
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM users 
      WHERE id = auth.uid() 
      AND role IN ('owner', 'admin', 'moderator')
    )
  );

CREATE POLICY "ุงููุณุคูููู ููุท ูููููู ุฑุคูุฉ ุงููุชู"
  ON mutes FOR SELECT
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM users 
      WHERE id = auth.uid() 
      AND role IN ('owner', 'admin', 'moderator')
    )
  );

CREATE POLICY "ุงููุณุคูููู ููุท ูููููู ูุชู ุงููุณุชุฎุฏููู"
  ON mutes FOR INSERT
  TO authenticated
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM users 
      WHERE id = auth.uid() 
      AND role IN ('owner', 'admin', 'moderator')
    )
  );

-- ุณูุงุณุงุช ูุนุงููุงุช ุงูููุงุท
CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุฑุคูุฉ ูุนุงููุงุชูู"
  ON coins_transactions FOR SELECT
  TO authenticated
  USING (user_id = auth.uid());

CREATE POLICY "ุงููุธุงู ููููู ุฅุถุงูุฉ ูุนุงููุงุช"
  ON coins_transactions FOR INSERT
  TO authenticated
  WITH CHECK (true);

-- ุณูุงุณุงุช ุงููุชุฌุฑ
CREATE POLICY "ุงูุฌููุน ูููููู ุฑุคูุฉ ุนูุงุตุฑ ุงููุชุฌุฑ"
  ON shop_items FOR SELECT
  TO authenticated, anon
  USING (true);

CREATE POLICY "ุงููุณุคูููู ููุท ูููููู ุฅุถุงูุฉ ุนูุงุตุฑ ูููุชุฌุฑ"
  ON shop_items FOR INSERT
  TO authenticated
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM users 
      WHERE id = auth.uid() 
      AND role IN ('owner', 'admin')
    )
  );

-- ุณูุงุณุงุช ุนูุงุตุฑ ุงููุณุชุฎุฏู
CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุฑุคูุฉ ุนูุงุตุฑูู"
  ON user_items FOR SELECT
  TO authenticated
  USING (user_id = auth.uid());

CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุดุฑุงุก ุนูุงุตุฑ"
  ON user_items FOR INSERT
  TO authenticated
  WITH CHECK (user_id = auth.uid());

CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุชูุนูู/ุฅูุบุงุก ุชูุนูู ุนูุงุตุฑูู"
  ON user_items FOR UPDATE
  TO authenticated
  USING (user_id = auth.uid())
  WITH CHECK (user_id = auth.uid());

-- ุณูุงุณุงุช ุงูุฅุดุนุงุฑุงุช
CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุฑุคูุฉ ุฅุดุนุงุฑุงุชูู"
  ON notifications FOR SELECT
  TO authenticated
  USING (user_id = auth.uid());

CREATE POLICY "ุงููุธุงู ููููู ุฅูุดุงุก ุฅุดุนุงุฑุงุช"
  ON notifications FOR INSERT
  TO authenticated
  WITH CHECK (true);

CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุชุญุฏูุซ ุฅุดุนุงุฑุงุชูู"
  ON notifications FOR UPDATE
  TO authenticated
  USING (user_id = auth.uid())
  WITH CHECK (user_id = auth.uid());
